<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="CompButton.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAYEBAQFBAYFBQYJBgUGCQsIBgYICwwKCgsKCgwQDAwMDAwM
        EAwODxAPDgwTExQUExMcGxsbHCAgICAgICAgICD/2wBDAQcHBw0MDRgQEBgaFREVGiAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICD/wAARCAAsADEDAREAAhEBAxEB/8QA
        GAABAQEBAQAAAAAAAAAAAAAAAAUIAwf/xAAzEAAABgEBAwoEBwAAAAAAAAAAAQIDBAUGVQcRFggSEyE2
        dZSV0tQVGJOzFzFBUlaR0//EABcBAQEBAQAAAAAAAAAAAAAAAAAHBAb/xAAvEQABAgQDBQcFAQAAAAAA
        AAAAAQIDBBVTBZLRFjRSoaIxQlFyc7GyBhEhInFh/9oADAMBAAIRAxEAPwCdiWJ4q/itM+/TQXX3YMZb
        rq4zKlKUplJmpRmneZmf5mJtPT0dI70R70RHu7y+JIsSxKZbMxESI9ER7u8viv8ApV4Mw/Qq/wAKz6Rk
        qExcfmUw1WbuxMztRwZh+hV/hWfSFQmLj8yiqzd2JmdqODMP0Kv8Kz6QqExcfmUVWbuxMztRwZh+hV/h
        WfSFQmLj8yiqzd2JmdqODMP0Kv8ACs+kKhMXH5lFVm7sTM7Uyp0i/wBx/wBiqFrNV4Z2Pou74v2UiV4h
        vETzu9yKYrvcX1HfJSyMZgAAAAAAAxyLAXo1bhnY+i7vi/ZSJXiG8RPO73Ipiu9xfUd8lLIxmAAAAAAA
        DHIsBejVuGdj6Lu+L9lIleIbxE87vcimK73F9R3yUsjGYAAAAAAAMciwF6NWYy1bwsbqoUqhvG5MaHHZ
        fR8Gs1c1bbSUqLemOZHuMv0HATmCTT4z3Iz8K5V7W+P9JfiH07OxJiI9rPu1z3Kn7N7FX+lPp52iXnkt
        r7YZqBOcHNupk2Yn7fU3U4xLJyZFZlxKq4kRJCEux5DVPZrbcbWXOStCkxzJSVEe8jIKBOcHNuo2Yn7f
        U3US7JyHFely6q4jxI6FOyJDtPZobbbQXOUtalRyJKUkW8zMKBOcHNuo2Yn7fU3U7dPO0S88ltfbBQJz
        g5t1GzE/b6m6jp52iXnktr7YKBOcHNuo2Yn7fU3UzZ+Em1T+HXfl0r/MUgrZ7bm/K72k0WaX9HEraZcS
        qsZcKOt1mUbhtx31NJNZpkpI1GSevcRACJ86u1PS6P6Ev3QAn49yu9pNFQVtHEraZcSqisQo63WZRuG3
        HbJpJrNMlJGoyT17iIAMh5Xe0m9oLKjl1tMiJaxX4UhbTMonCbkNm0o0GqSoiURK6t5GAKHzq7U9Lo/o
        S/dAC3hHK72k3uaUFHLraZES1sYkKQtpmUThNyH0tKNBqkqIlESureRgDXIA/9k=
</value>
  </data>
</root>